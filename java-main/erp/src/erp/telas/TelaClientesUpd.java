/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.telas;

import erp.controllernovo.TelaClientesCadController;
import erp.controllernovo.TelaClientesExcController;
import erp.controllernovo.TelaClientesUpdController;
import erp.dao.ClientesDAO;
import erp.jdbc.ConnectionFactory;
import erp.objects.Clientes;
import erp.teste.SoNumeros;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Renato
 */
public class TelaClientesUpd extends javax.swing.JInternalFrame {

   // conexao 
   Connection con = null;
   
 
    // conexao 
    public TelaClientesUpd(Connection conexao) {
         this.con = conexao;
    }
 
   
    /**
     * Creates new form TelaClientesCad
     */
    public TelaClientesUpd() {
          // conexao 
        this.con = new ConnectionFactory().getConnection();
        initComponents();
        txtId.setDocument(new SoNumeros());
        txtCadTelefone.setDocument(new SoNumeros());
        cbUf.setSelectedItem(null);
        con = ConnectionFactory.getConnection();
        /* linhas abaixo fazem os campos iniciarem não editaveis,
         ficando editavel apenas quando clica no botão "Ver dados" */
        bloquearcampos();
        
        
        
        
    }
    
/* metodo feito para consultar o ID informado e informar seus dados 
    nos campos de digitação da tela para alterações.
    */
   public void consulta() throws SQLException{
        
        int id = Integer.parseInt(txtId.getText());
        Clientes list = new Clientes(id);
        boolean existeid = existeID(list);
        if (existeid){
            String sql = "select * from clientes where id=?";
        try {
            PreparedStatement pst=con.prepareStatement(sql);
            ResultSet rs = null;
            pst.setInt(1, Integer.parseInt(txtId.getText()));
            rs= pst.executeQuery();
            
            if(rs.next()){
                txtCadNome.setText(rs.getString(2)); 
                txtCadRg.setText(rs.getString(3));
                txtCadCpf.setText(rs.getString(4));
                txtCadEndereco.setText(rs.getString(5));
                txtCadCep.setText(rs.getString(6));
                txtCadCidade.setText(rs.getString(7));
                cbUf.setSelectedItem(rs.getString(8));
                txtCadTelefone.setText(rs.getString(9));
                txtCadBairro.setText(rs.getString(10));
            }
            
               
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
            
        }else{
            JOptionPane.showMessageDialog(null, "ID não encontrado no Sistema");
        }
        
    }
    //Metodo para saber se o id esta registrado
   public boolean existeID(Clientes idClientes) throws SQLException {
       // Esse metodo vai consultar o banco e trazer dados ;
       String sql = "select * from clientes where id = ?";
       
       PreparedStatement st = con.prepareStatement(sql);
       ResultSet rs = null;
       st.setInt(1, Integer.parseInt(txtId.getText()));
       
       rs = st.executeQuery();
       
       //esses dados podem ser recebidos por esse metodo abaixo;
       // essa variavel result é o resultado da pesquisa no banco;
      ResultSet result = st.getResultSet();
      
       
        return result.next();
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCadNome = new javax.swing.JTextField();
        txtCadCidade = new javax.swing.JTextField();
        txtCadEndereco = new javax.swing.JTextField();
        txtCadRg = new javax.swing.JTextField();
        txtCadBairro = new javax.swing.JTextField();
        txtCadTelefone = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtCadCep = new javax.swing.JFormattedTextField();
        txtCadCpf = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        cbUf = new javax.swing.JComboBox<>();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Atualizar Dados");
        setPreferredSize(new java.awt.Dimension(600, 345));

        jLabel1.setText("Nome");

        jLabel2.setText("RG");

        jLabel3.setText("CPF");

        jLabel4.setText("CEP");

        jLabel5.setText("Cidade");

        jLabel6.setText("Endereco");

        jLabel7.setText("UF");

        jLabel9.setText("Telefone");

        txtCadEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadEnderecoActionPerformed(evt);
            }
        });

        txtCadTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadTelefoneActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/telas/imagens/172618_update_icon.png"))); // NOI18N
        jButton1.setToolTipText("Atualizar Dados");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        try {
            txtCadCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCadCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel11.setText("Bairro");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("Digite o ID do Cliente para alterar seus dados : ");

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jButton2.setText("Ver dados");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cbUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtCadEndereco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                .addComponent(txtCadNome, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCadCidade))
                            .addComponent(txtCadRg, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCadCpf)
                                    .addComponent(txtCadCep)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCadBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCadTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCadNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtCadCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cbUf, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCadEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(txtCadCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtCadCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(txtCadBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCadRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2)
                    .addComponent(txtCadTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        setBounds(0, 0, 600, 355);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCadEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadEnderecoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
     alterarClientes();
     limparcampos();
     bloquearcampos();
  
      
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCadTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadTelefoneActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if(txtId.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Informe o ID");
               
            }else {
                try {  // abaixo foi feito uma validação para saber se existia o id informado.
              
           consulta();
           int id = Integer.parseInt(txtId.getText());
        Clientes list = new Clientes(id);
        boolean existeid = existeID(list);
        if (existeid) { // se o id informado existir , todos os campos ficam editaveis.
            ativarcampos();
        JOptionPane.showMessageDialog(null, "Altere os campos que deseja, e em seguida clique em atualizar");
        }else { // se não existir , os campos continuam sem interação.
            bloquearcampos();
        }
       } catch (SQLException ex) {
           Logger.getLogger(TelaClientesUpd.class.getName()).log(Level.SEVERE, null, ex);
       }
                
            }
        } catch (Exception e) {
        }
         
       
       
            
            
        
        
        
       
        

        
        
       
        
        
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    public JTextField getTxtCadBairro() {
        return txtCadBairro;
    }

    public void setTxtCadBairro(JTextField txtCadBairro) {
        this.txtCadBairro = txtCadBairro;
    }

    public JFormattedTextField getTxtCadCep() {
        return txtCadCep;
    }

    public void setTxtCadCep(JFormattedTextField txtCadCep) {
        this.txtCadCep = txtCadCep;
    }

    public JTextField getTxtCadCidade() {
        return txtCadCidade;
    }

    public void setTxtCadCidade(JTextField txtCadCidade) {
        this.txtCadCidade = txtCadCidade;
    }

    public JFormattedTextField getTxtCadCpf() {
        return txtCadCpf;
    }

    public void setTxtCadCpf(JFormattedTextField txtCadCpf) {
        this.txtCadCpf = txtCadCpf;
    }

    public JTextField getTxtCadEndereco() {
        return txtCadEndereco;
    }

    public void setTxtCadEndereco(JTextField txtCadEndereco) {
        this.txtCadEndereco = txtCadEndereco;
    }

    public JTextField getTxtCadNome() {
        return txtCadNome;
    }

    public void setTxtCadNome(JTextField txtCadNome) {
        this.txtCadNome = txtCadNome;
    }

    public JTextField getTxtCadRg() {
        return txtCadRg;
    }

    public void setTxtCadRg(JTextField txtCadRg) {
        this.txtCadRg = txtCadRg;
    }

    public JTextField getTxtCadTelefone() {
        return txtCadTelefone;
    }

    public void setTxtCadTelefone(JTextField txtCadTelefone) {
        this.txtCadTelefone = txtCadTelefone;
    }


    public JTextField getTxtId() {
        return txtId;
    }

    public void setTxtId(JTextField txtId) {
        this.txtId = txtId;
    }


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbUf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtCadBairro;
    private javax.swing.JFormattedTextField txtCadCep;
    private javax.swing.JTextField txtCadCidade;
    private javax.swing.JFormattedTextField txtCadCpf;
    private javax.swing.JTextField txtCadEndereco;
    private javax.swing.JTextField txtCadNome;
    private javax.swing.JTextField txtCadRg;
    private javax.swing.JTextField txtCadTelefone;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables


/*metodo substituto da classe Controller para atualizar(update) 
    nos dados do cliente , todo o codigo já esta pronto abaixo.
    */ 
private void alterarClientes(){
    int id;
    String nome, rg ,cpf , endereco , cidade , cep, uf , numero,bairro;
    
    id = Integer.parseInt(txtId.getText());
    nome = txtCadNome.getText();
    rg = txtCadRg.getText();
    cpf = txtCadCpf.getText();
    endereco = txtCadEndereco.getText();
    cidade = txtCadCidade.getText();
    cep = txtCadCep.getText();
    uf = cbUf.getSelectedItem().toString();
    numero = txtCadTelefone.getText();
    bairro = txtCadBairro.getText();
    
    Clientes obj = new Clientes();
    obj.setId(id);
    obj.setNome(nome);
    obj.setRg(rg);
    obj.setCpf(cpf);
    obj.setEndereco(endereco);
    obj.setCidade(cidade);
    obj.setCep(cep);
    obj.setUf(uf);
    obj.setNumero(numero);
    obj.setBairro(bairro);
    if ((txtId.getText().isEmpty()||txtCadNome.getText().isEmpty() || txtCadCpf.getText().isEmpty() || 
                        txtCadEndereco.getText().isEmpty() || txtCadRg.getText().isEmpty() || 
                        txtCadCep.getText().isEmpty() || txtCadCidade.getText().isEmpty()  ||
                         txtCadTelefone.getText().isEmpty() || cbUf.getSelectedItem().toString().isEmpty() ||
                        txtCadBairro.getText().isEmpty())){
                JOptionPane.showMessageDialog(null, "Preencha todos os campos."); 
        
    } else {
        ClientesDAO objDao = new ClientesDAO();
        objDao.updateClientes(obj);
    }
    
    
 
    
    
    
    
}



   public void limparcampos() {
      txtCadNome.setText(null);
        txtCadBairro.setText(null);
         txtCadRg.setText(null);
         txtCadCep.setText(null);
         txtCadTelefone.setText(null);
         txtCadEndereco.setText(null);
         txtCadCpf.setText(null);
         cbUf.setSelectedItem(null);
         txtCadCidade.setText(null);

}
   
public void bloquearcampos(){
    txtCadBairro.setEnabled(false);
        txtCadCep.setEnabled(false);
        txtCadCidade.setEnabled(false);
        txtCadCpf.setEnabled(false);
        txtCadEndereco.setEnabled(false);
        txtCadNome.setEnabled(false);
        txtCadRg.setEnabled(false);
        txtCadTelefone.setEnabled(false);
        cbUf.setEnabled(false);
        jButton1.setEnabled(false);
}

public void ativarcampos(){
    txtCadBairro.setEnabled(true);
        txtCadCep.setEnabled(true);
        txtCadCidade.setEnabled(true);
        txtCadCpf.setEnabled(true);
        txtCadEndereco.setEnabled(true);
        txtCadNome.setEnabled(true);
        txtCadRg.setEnabled(true);
        txtCadTelefone.setEnabled(true);
        cbUf.setEnabled(true);
        jButton1.setEnabled(true);
}




}
